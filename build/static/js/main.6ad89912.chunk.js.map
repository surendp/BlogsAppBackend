{"version":3,"sources":["services/blogs.js","reducers/notificationReducer.js","reducers/selectedBlogReducer.js","components/CommentForm.js","reducers/blogsReducer.js","components/Blog.js","components/Notification.js","services/users.js","reducers/usersReducer.js","components/Users.js","reducers/selectedUserReducer.js","components/User.js","components/Togglable.js","components/CustomFormField.js","components/BlogForm.js","components/Blogs.js","services/login.js","reducers/authenticationReducer.js","components/LoginForm.js","components/CustomNavBar.js","components/SignupForm.js","App.js","store.js","index.js"],"names":["baseUrl","token","config","headers","Authorization","create","blog","a","axios","post","request","data","update","updatedBlog","put","id","remove","delete","getAll","get","then","response","getOne","blogId","setToken","newToken","createComment","content","userId","comment","notificationActionCreator","message","isError","timeInSeconds","dispatch","setNotificationActionCreator","setTimeout","clearNotificationActionCreator","type","payload","defaultState","notificationReducer","state","action","newState","addCommentHelper","comments","selectedBlogReducer","useStyles","makeStyles","form","display","flexDirection","alignContent","button","marginLeft","CommentForm","useState","setComment","useDispatch","useParams","classes","className","onSubmit","event","preventDefault","blogService","console","log","error","addCommentActionCreator","TextField","value","onChange","target","label","variant","size","Button","updateBlogHelper","map","toString","deleteBlogHelper","filter","blogsReducer","root","padding","commentsHeading","margin","blogTitle","marginBottom","likeButton","marginRight","blogDetails","commentsTable","marginTop","backgroundColor","Blog","history","useHistory","useSelector","selectedBlog","authentication","useEffect","fetchSelectedBlogActionCreator","title","author","url","likes","user","Container","component","Paper","Typography","Divider","href","rel","name","onClick","blogToBeLiked","likedBlog","likeBlogActionCreator","blogToBeDeleted","window","confirm","push","Table","TableBody","TableRow","key","TableCell","Notification","propType","PropTypes","string","isRequired","bool","username","password","usersReducer","usersHeading","Users","users","userService","TableHead","to","blogs","length","selectedUserReducer","User","selectedUser","fetchSelectedUserActionCreator","Togglable","buttonLabel","children","visible","setVisible","hideWhenVisible","showWhenVisible","toggleVisibility","style","color","tableCellRoot","borderBottom","CustomFormField","more","formHeading","textAlign","createButton","alignSelf","formField","width","table","maxWidth","BlogForm","handleClickCreate","setTitle","setAuthor","setUrl","handleChangeFormData","fieldName","blogList","Blogs","newBlog","createBlogActionCreator","List","sort","blogFirst","blogSecond","sortBlogList","ListItem","Link","divider","login","credentials","setUserActionCreator","loginActionCreator","loginService","localStorage","setItem","JSON","stringify","signupActionCreator","authenticationReducer","justifyContent","flexGrow","notification","loginButton","signupButton","LoginForm","setUsername","setPassword","handleLogin","fullWidth","typography","CustomNavBar","handleLogout","removeItem","AppBar","position","Toolbar","SignupForm","setName","handleSignup","heading","App","parse","getItem","path","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ad89912.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst config = () => ({\r\n  headers: {\r\n    Authorization: token,\r\n  }\r\n})\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getOne = blogId => {\r\n  const request = axios.get(`${baseUrl}/${blogId}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async blog => {\r\n  const request = await axios\r\n    .post(baseUrl, blog, config())\r\n\r\n  return request.data\r\n}\r\n\r\nconst update = async updatedBlog => {\r\n  const request = await axios\r\n    .put(`${baseUrl}/${updatedBlog.id}`, updatedBlog, config())\r\n\r\n  return request.data\r\n}\r\n\r\nconst remove = async blog => {\r\n  const request = await axios\r\n    .delete(`${baseUrl}/${blog.id}`, config())\r\n\r\n  return request.data\r\n}\r\n\r\nconst createComment = async (content, userId) => {\r\n  const request = await axios\r\n    .post(\r\n      `${baseUrl}/${userId}/comments`,\r\n      { comment: content },\r\n      config()\r\n    )\r\n\r\n  return request.data\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  getOne,\r\n  setToken,\r\n  create,\r\n  createComment,\r\n  update,\r\n  remove,\r\n}","// action types\r\nconst SET_NOTIFICATION = 'SET_NOTIFICATION'\r\nconst CLEAR_NOTIFICATION = 'CLEAR_NOTIFICATION'\r\n\r\n// action creators\r\nconst notificationActionCreator = (message, isError, timeInSeconds) => {\r\n  return dispatch => {\r\n    dispatch(setNotificationActionCreator(message, isError))\r\n    setTimeout(() => {\r\n      dispatch(clearNotificationActionCreator())\r\n    }, timeInSeconds * 1000)\r\n  }\r\n}\r\n\r\nconst setNotificationActionCreator = (message, isError) => ({\r\n  type: SET_NOTIFICATION,\r\n  payload: {\r\n    message,\r\n    isError\r\n  }\r\n})\r\n\r\nconst clearNotificationActionCreator = () => ({\r\n  type: CLEAR_NOTIFICATION\r\n})\r\n\r\n// default state\r\nconst defaultState = {\r\n  message: null,\r\n  isError: false,\r\n}\r\n\r\n// reducer\r\nconst notificationReducer = (state = defaultState, action) => {\r\n  let newState = { ...state }\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case SET_NOTIFICATION:\r\n      newState = {\r\n        ...state,\r\n        message: payload.message,\r\n        isError: payload.isError\r\n      }\r\n      break\r\n\r\n    case CLEAR_NOTIFICATION:\r\n      newState = {\r\n        ...state,\r\n        message: null,\r\n        isError: false,\r\n      }\r\n      break\r\n\r\n    default:\r\n      break\r\n  }\r\n\r\n  return newState\r\n}\r\n\r\nexport {\r\n  setNotificationActionCreator,\r\n  clearNotificationActionCreator,\r\n  notificationActionCreator,\r\n}\r\n\r\nexport default notificationReducer","import blogService from '../services/blogs'\r\nimport { notificationActionCreator } from './notificationReducer'\r\n\r\n// action types\r\nconst FETCH_SELECTED_BLOG = 'FETCH_SELECTED_BLOG'\r\nconst LIKE_BLOG = 'LIKE_BLOG'\r\nconst ADD_COMMENT = 'ADD_COMMENT'\r\n\r\n// action creators\r\nconst fetchSelectedBlogActionCreator = blogId => {\r\n  return async dispatch => {\r\n    try {\r\n      const selectedBlog = await blogService\r\n        .getOne(blogId)\r\n      dispatch({\r\n        type: FETCH_SELECTED_BLOG,\r\n        payload: selectedBlog\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nconst likeBlogActionCreator = blogToBeLiked => {\r\n  const likedBlog = {\r\n    ...blogToBeLiked,\r\n    likes: blogToBeLiked.likes + 1,\r\n    user: blogToBeLiked.user.id,\r\n  }\r\n\r\n  return async dispatch => {\r\n    try {\r\n      const blog = await blogService\r\n        .update(likedBlog)\r\n\r\n      dispatch({\r\n        type: LIKE_BLOG,\r\n        payload: blog\r\n      })\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\n\r\nconst addCommentActionCreator = (content, userId) => {\r\n  return async dispatch => {\r\n    try {\r\n      const comment = await blogService\r\n        .createComment(content, userId)\r\n\r\n      dispatch({\r\n        type: ADD_COMMENT,\r\n        payload: comment\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n      dispatch(notificationActionCreator(error.response.data.error, true, 5))\r\n    }\r\n  }\r\n}\r\n\r\n// helper functions\r\nconst addCommentHelper = (state, payload) => ({\r\n  ...state,\r\n  comments: [\r\n    ...state.comments,\r\n    payload\r\n  ]\r\n})\r\n\r\n// reducer\r\nconst selectedBlogReducer = (state = null, action) => {\r\n  let newState = state\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case FETCH_SELECTED_BLOG:\r\n      newState = payload\r\n      break\r\n\r\n    case LIKE_BLOG:\r\n      newState = payload\r\n      break\r\n\r\n    case ADD_COMMENT:\r\n      newState = addCommentHelper(state, payload)\r\n      break\r\n\r\n    default:\r\n      break\r\n  }\r\n\r\n  return newState\r\n}\r\n\r\nexport {\r\n  fetchSelectedBlogActionCreator,\r\n  likeBlogActionCreator,\r\n  addCommentActionCreator\r\n}\r\n\r\nexport default selectedBlogReducer","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport { TextField, Button } from '@material-ui/core'\r\nimport { addCommentActionCreator } from '../reducers/selectedBlogReducer'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignContent: 'center'\r\n  },\r\n\r\n  button: {\r\n    marginLeft: '4px'\r\n  }\r\n})\r\n\r\nconst CommentForm = () => {\r\n  const [comment, setComment] = useState('')\r\n  const dispatch = useDispatch()\r\n  const userId = useParams().id\r\n  const classes = useStyles()\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    dispatch(addCommentActionCreator(comment, userId))\r\n    setComment('')\r\n  }\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={handleSubmit}>\r\n      <TextField\r\n        value={comment}\r\n        onChange={event => setComment(event.target.value)}\r\n        id=\"outlined-basic\"\r\n        label=\"Add comment\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n      />\r\n      <Button\r\n        className={classes.button}\r\n        type=\"submit\"\r\n        variant=\"outlined\"\r\n      >\r\n        {'Add Comment'}\r\n      </Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default CommentForm","import blogService from '../services/blogs'\r\n\r\nimport {\r\n  notificationActionCreator\r\n} from './notificationReducer'\r\n\r\n//action types\r\nconst FETCH_BLOGS = 'FETCH_BLOGS'\r\nconst CREATE_BLOG = 'CREATE_BLOG'\r\nconst UPDATE_BLOG = 'UPDATE_BLOG'\r\nconst DELETE_BLOG = 'DELETE_BLOG'\r\n\r\n// action creators\r\nconst fetchBlogsActionCreator = () => {\r\n  return async dispatch => {\r\n    try {\r\n      const blogs = await blogService.getAll()\r\n      dispatch({\r\n        type: FETCH_BLOGS,\r\n        payload: blogs\r\n      })\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\n\r\nconst createBlogActionCreator = (title, author, url) => {\r\n  return async dispatch => {\r\n    try {\r\n      const newBlog = await blogService.create({\r\n        title, author, url\r\n      })\r\n      dispatch({\r\n        type: CREATE_BLOG,\r\n        payload: newBlog\r\n      })\r\n      dispatch(notificationActionCreator(\r\n        `A new blog, ${newBlog.title} by ${newBlog.author}, added`,\r\n        false,\r\n        5\r\n      ))\r\n    } catch (err) {\r\n      dispatch(notificationActionCreator(\r\n        err.response.data.error,\r\n        true,\r\n        5\r\n      ))\r\n    }\r\n  }\r\n}\r\n\r\nconst updateBlogActionCreator = modifiedBlog => {\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBlog = await blogService\r\n        .update(modifiedBlog)\r\n      dispatch({\r\n        type: UPDATE_BLOG,\r\n        payload: updatedBlog\r\n      })\r\n    } catch (err) {\r\n      dispatch(notificationActionCreator(\r\n        err.response.data.error,\r\n        true,\r\n        5\r\n      ))\r\n    }\r\n  }\r\n}\r\n\r\nconst deleteBlogActionCreator = blogToBeDeleted => {\r\n  return async dispatch => {\r\n    try {\r\n      await blogService.remove(blogToBeDeleted)\r\n      dispatch({\r\n        type: DELETE_BLOG,\r\n        payload: blogToBeDeleted\r\n      })\r\n    } catch (err) {\r\n      dispatch(notificationActionCreator(\r\n        err.response.data.error,\r\n        true,\r\n        5\r\n      ))\r\n    }\r\n  }\r\n}\r\n\r\n// helper functions\r\nconst updateBlogHelper = (state, payload) => state.map(blog => {\r\n  if (blog.id.toString() === payload.id.toString()) {\r\n    return payload\r\n  }\r\n  return blog\r\n})\r\n\r\nconst deleteBlogHelper = (state, payload) => state.filter(\r\n  blog => blog.id.toString() !== payload.id.toString()\r\n)\r\n\r\n\r\n// reducer\r\nconst blogsReducer = (state = [], action) => {\r\n  let newState = [ ...state ]\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case FETCH_BLOGS:\r\n      newState = [\r\n        ...payload\r\n      ]\r\n      break\r\n\r\n    case CREATE_BLOG:\r\n      newState = [\r\n        ...state,\r\n        payload\r\n      ]\r\n      break\r\n\r\n    case UPDATE_BLOG:\r\n      newState = updateBlogHelper(state, payload)\r\n      break\r\n\r\n    case DELETE_BLOG:\r\n      newState = deleteBlogHelper(state, payload)\r\n      break\r\n\r\n    default:\r\n      break\r\n  }\r\n\r\n  return newState\r\n}\r\n\r\nexport {\r\n  fetchBlogsActionCreator,\r\n  createBlogActionCreator,\r\n  updateBlogActionCreator,\r\n  deleteBlogActionCreator\r\n}\r\n\r\nexport default blogsReducer","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport CommentForm from './CommentForm'\r\n\r\nimport {\r\n  fetchSelectedBlogActionCreator,\r\n  likeBlogActionCreator\r\n} from '../reducers/selectedBlogReducer'\r\n\r\nimport {\r\n  deleteBlogActionCreator\r\n} from '../reducers/blogsReducer'\r\nimport { Container, Typography, Paper, Button, Divider, Table, TableBody, TableRow, TableCell } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: '32px',\r\n  },\r\n\r\n  commentsHeading: {\r\n    margin: '24px 0px',\r\n  },\r\n\r\n  blogTitle: {\r\n    marginBottom: '24px'\r\n  },\r\n\r\n  likeButton: {\r\n    marginRight: '24px'\r\n  },\r\n\r\n  blogDetails: {\r\n    padding: '24px'\r\n  },\r\n\r\n  commentsTable: {\r\n    marginTop: '24px',\r\n    backgroundColor: '#fafafa'\r\n  }\r\n})\r\n\r\nconst Blog = () => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const blogId = useParams().id\r\n  const {\r\n    selectedBlog,\r\n    authentication,\r\n  } = useSelector(state => state)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSelectedBlogActionCreator(blogId))\r\n  }, [])\r\n\r\n  if (!selectedBlog) {\r\n    return null\r\n  }\r\n\r\n  const {\r\n    title,\r\n    author,\r\n    url,\r\n    likes,\r\n    user,\r\n    comments,\r\n  } = selectedBlog\r\n\r\n  const handleClickLike = () => {\r\n    dispatch(likeBlogActionCreator(selectedBlog))\r\n  }\r\n\r\n  const handleClickDelete = () => {\r\n    const confirm = window.confirm(`Remove blog ${selectedBlog.title}`)\r\n    if (!confirm) {\r\n      return\r\n    }\r\n\r\n    dispatch(deleteBlogActionCreator(selectedBlog))\r\n    history.push('/')\r\n  }\r\n\r\n  const renderComments = () => comments.map(comment =>\r\n    <TableRow key={comment.id}>\r\n      <TableCell>\r\n        {comment.comment}\r\n      </TableCell>\r\n    </TableRow>\r\n  )\r\n\r\n  return (\r\n    <Container component={Paper} className={classes.root}>\r\n      <Typography\r\n        variant=\"h4\"\r\n        className={classes.blogTitle}\r\n      >\r\n        {`${title} (By ${author})`}\r\n      </Typography>\r\n      <Divider />\r\n      <div className={classes.blogDetails}>\r\n        <Typography\r\n          component=\"a\"\r\n          href={url}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {url}\r\n        </Typography>\r\n        <Typography>\r\n          {`Likes ${likes}`}\r\n        </Typography>\r\n        <Typography>\r\n          {user.name}\r\n        </Typography>\r\n        <Button\r\n          className={classes.likeButton}\r\n          onClick={handleClickLike}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        >\r\n          {'like'}\r\n        </Button>\r\n        {\r\n          user.id === authentication.user.id ? (\r\n            <Button\r\n              onClick={handleClickDelete}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            >\r\n              {'remove'}\r\n            </Button>\r\n          ) : ''\r\n        }\r\n      </div>\r\n      <Typography\r\n        variant=\"h5\"\r\n        className={classes.commentsHeading}\r\n      >\r\n        {'Comments'}\r\n      </Typography>\r\n      <CommentForm />\r\n      <Table className={classes.commentsTable}>\r\n        <TableBody>\r\n          {renderComments()}\r\n        </TableBody>\r\n      </Table>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Notification = ({ message, isError }) => (\r\n  <div\r\n    id=\"notification\"\r\n    className={`notification ${isError ? 'error' : 'success'}`}\r\n  >\r\n    { message }\r\n  </div>\r\n)\r\n\r\nNotification.propType = {\r\n  message: PropTypes.string.isRequired,\r\n  isError: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getOne = userId => {\r\n  const request = axios.get(`${baseUrl}/${userId}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (name, username, password) => {\r\n  const request = axios.post(baseUrl, {\r\n    name,\r\n    username,\r\n    password\r\n  })\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  getOne,\r\n  create\r\n}","import userService from '../services/users'\r\n\r\n// action types\r\nconst FETCH_USERS = 'FETCH_USERS'\r\n\r\n// action creators\r\nconst fetchUsersActionCreator = () => {\r\n  return async dispatch => {\r\n    try {\r\n      const users = await userService.getAll()\r\n      dispatch({\r\n        type: FETCH_USERS,\r\n        payload: users\r\n      })\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\n\r\n// reducer\r\nconst usersReducer = (state = [], action) => {\r\n  let newState = [ ...state ]\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case FETCH_USERS:\r\n      newState = [\r\n        ...payload\r\n      ]\r\n      break\r\n\r\n    default:\r\n      break\r\n  }\r\n\r\n  return newState\r\n}\r\n\r\nexport {\r\n  fetchUsersActionCreator\r\n}\r\n\r\nexport default usersReducer","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { fetchUsersActionCreator } from '../reducers/usersReducer'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Typography, Table, Paper, TableRow, TableCell, TableHead, TableBody } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  usersHeading: {\r\n    marginBottom: '24px'\r\n  }\r\n})\r\n\r\nconst Users = () => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const users = useSelector(state => state.users)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsersActionCreator())\r\n  }, [])\r\n\r\n  return (\r\n    <Container>\r\n      <Typography\r\n        variant=\"h4\"\r\n        className={classes.usersHeading}\r\n      >\r\n        {'Users'}\r\n      </Typography>\r\n      <Paper component={Table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Full Name</TableCell>\r\n            <TableCell>Blogs created</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n            users.map(user => (\r\n              <TableRow key={user.id}>\r\n                <TableCell>\r\n                  <Link to={`/users/${user.id}`}>\r\n                    {user.name}\r\n                  </Link>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {user.blogs.length}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n          }\r\n        </TableBody>\r\n      </Paper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Users\r\n","import userService from '../services/users'\r\n\r\n// action types\r\nconst FETCH_SELECTED_USER = 'FETCH_SELECTED_USER'\r\n\r\n// action creators\r\nconst fetchSelectedUserActionCreator = (userId) => {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.getOne(userId)\r\n      dispatch({\r\n        type: FETCH_SELECTED_USER,\r\n        payload: user\r\n      })\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\n\r\n// reducer\r\nconst selectedUserReducer = (state = null, action) => {\r\n  let newState = state\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case FETCH_SELECTED_USER:\r\n      newState = payload\r\n      break\r\n\r\n    default:\r\n      break\r\n  }\r\n\r\n  return newState\r\n}\r\n\r\nexport {\r\n  fetchSelectedUserActionCreator\r\n}\r\n\r\nexport default selectedUserReducer","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport {\r\n  fetchSelectedUserActionCreator\r\n} from '../reducers/selectedUserReducer'\r\nimport { Container, Table, Paper, Typography, TableHead, TableRow, TableCell, TableBody, makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  username: {\r\n    marginBottom: '24px',\r\n    padding: '16px'\r\n  }\r\n})\r\n\r\nconst User = () => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.selectedUser)\r\n  const userId = useParams().id\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSelectedUserActionCreator(userId))\r\n  }, [])\r\n\r\n  if (!user) {\r\n    return null\r\n  }\r\n\r\n  const renderBlogs = () => user.blogs.map(blog => (\r\n    <TableRow key={blog.id}>\r\n      <TableCell>\r\n        {blog.title}\r\n      </TableCell>\r\n    </TableRow>\r\n  ))\r\n\r\n  return (\r\n    <Container>\r\n      <Paper>\r\n        <Typography\r\n          variant=\"h5\"\r\n          className={classes.username}\r\n        >\r\n          {`Profile of ${user.name}`}\r\n        </Typography>\r\n      </Paper>\r\n      <Paper component={Table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>\r\n              {'Added Blogs'}\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {renderBlogs()}\r\n        </TableBody>\r\n      </Paper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default User","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from '@material-ui/core'\r\n\r\nconst Togglable = ({\r\n  buttonLabel,\r\n  children,\r\n}) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button\r\n          onClick={toggleVisibility}\r\n          variant=\"outlined\"\r\n          color=\"inherit\"\r\n        >\r\n          {buttonLabel}\r\n        </Button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {children}\r\n        <Button\r\n          onClick={toggleVisibility}\r\n          variant=\"outlined\"\r\n          color=\"inherit\"\r\n        >\r\n          {'Cancel'}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Togglable","import React from 'react'\r\nimport {\r\n  TextField,\r\n  TableCell,\r\n  TableRow,\r\n} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  tableCellRoot: {\r\n    borderBottom: 'none',\r\n    padding: '8px',\r\n  }\r\n})\r\n\r\nconst CustomFormField = ({ label, ...more }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <TableRow>\r\n      <TableCell className={classes.tableCellRoot}>\r\n        {label}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCellRoot}>\r\n        <TextField {...more} />\r\n      </TableCell>\r\n    </TableRow>\r\n  )\r\n}\r\n\r\nexport default CustomFormField","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, TableBody, Table, Typography, Paper, Divider } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport CustomFormField from './CustomFormField'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginBottom: '24px',\r\n  },\r\n  formHeading: {\r\n    padding: '24px 0px',\r\n    textAlign: 'center'\r\n  },\r\n  createButton: {\r\n    alignSelf: 'center',\r\n    margin: '24px 0px 24px 48px'\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '24px 32px 0px 16px'\r\n  },\r\n  formField: {\r\n    width: '100%',\r\n  },\r\n  table: {\r\n    maxWidth: '800px',\r\n    alignSelf: 'center'\r\n  }\r\n})\r\n\r\nconst BlogForm = ({\r\n  handleClickCreate,\r\n}) => {\r\n  const classes = useStyles()\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    handleClickCreate(title, author, url)\r\n    setTitle('')\r\n    setAuthor('')\r\n    setUrl('')\r\n  }\r\n\r\n  const handleChangeFormData = fieldName => {\r\n    if (fieldName === 'title') {\r\n      return event => setTitle(event.target.value)\r\n    }\r\n\r\n    if (fieldName === 'author') {\r\n      return event => setAuthor(event.target.value)\r\n    }\r\n\r\n    if (fieldName === 'url') {\r\n      return event => setUrl(event.target.value)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Typography\r\n        variant=\"h4\"\r\n        className={classes.formHeading}\r\n      >\r\n        {'Create New'}\r\n      </Typography>\r\n      <Divider />\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className={classes.form}\r\n      >\r\n        <Table className={classes.table}>\r\n          <TableBody>\r\n            <CustomFormField\r\n              id=\"title\"\r\n              label=\"title\"\r\n              variant=\"outlined\"\r\n              value={title}\r\n              size=\"small\"\r\n              onChange={handleChangeFormData('title')}\r\n              className={classes.formField}\r\n            />\r\n            <CustomFormField\r\n              id=\"author\"\r\n              label=\"author\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={author}\r\n              className={classes.formField}\r\n              onChange={handleChangeFormData('author')}\r\n            />\r\n            <CustomFormField\r\n              variant=\"outlined\"\r\n              label=\"url\"\r\n              id=\"url\"\r\n              size=\"small\"\r\n              value={url}\r\n              className={classes.formField}\r\n              onChange={handleChangeFormData('url')}\r\n            />\r\n          </TableBody>\r\n        </Table>\r\n        <Button\r\n          id=\"create\"\r\n          type=\"submit\"\r\n          variant=\"outlined\"\r\n          color='inherit'\r\n          className={classes.createButton}\r\n        >\r\n          {'create'}\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nBlogForm.propTypes = {\r\n  handleClickCreate: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default BlogForm","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  Container,\r\n  List,\r\n  ListItem,\r\n  Paper\r\n} from '@material-ui/core'\r\n\r\nimport Togglable from './Togglable'\r\nimport BlogForm from './BlogForm'\r\n\r\nimport {\r\n  fetchBlogsActionCreator,\r\n  createBlogActionCreator\r\n} from '../reducers/blogsReducer'\r\n\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  blogList: {\r\n    margin: '32px 0px'\r\n  }\r\n})\r\n\r\nconst Blogs = () => {\r\n  const classes = useStyles()\r\n  const blogs = useSelector(state => state.blogs)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchBlogsActionCreator())\r\n  }, [])\r\n\r\n  if (!blogs) {\r\n    return null\r\n  }\r\n\r\n  const handleClickCreate = (title, author, url) => {\r\n    dispatch(createBlogActionCreator(title, author, url))\r\n  }\r\n\r\n  const sortBlogList = blogs => {\r\n    return blogs.sort((blogFirst, blogSecond) => {\r\n      return blogSecond.likes - blogFirst.likes\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Togglable buttonLabel=\"New Blog\">\r\n        <BlogForm\r\n          handleClickCreate={handleClickCreate}\r\n        />\r\n      </Togglable>\r\n      <List component={Paper} className={classes.blogList} id=\"blog-list\">\r\n        {sortBlogList(blogs).map(blog => (\r\n          <ListItem\r\n            key={blog.id}\r\n            component={Link}\r\n            to={`/blogs/${blog.id}`}\r\n            divider\r\n          >\r\n            {blog.title}\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Blogs","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios\r\n    .post(baseUrl, credentials)\r\n\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\nimport userService from '../services/users'\r\nimport {\r\n  notificationActionCreator\r\n} from './notificationReducer'\r\n\r\n// action types\r\nconst SET_USER = 'SET_USER'\r\nconst REMOVE_USER = 'REMOVE_USER'\r\n\r\n// action creators\r\nconst setUserActionCreator = user => ({\r\n  type: SET_USER,\r\n  payload: user\r\n})\r\n\r\nconst removeUserActionCreator = () => ({\r\n  type: REMOVE_USER\r\n})\r\n\r\nconst loginActionCreator = (username, password) => {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password\r\n      })\r\n      window.localStorage.setItem(\r\n        'loggedBlogAppUser', JSON.stringify(user)\r\n      )\r\n      blogService.setToken(user.token)\r\n      dispatch(setUserActionCreator(user))\r\n    } catch (error) {\r\n      dispatch(notificationActionCreator(\r\n        'Wrong credentials',\r\n        true,\r\n        5\r\n      ))\r\n    }\r\n  }\r\n}\r\n\r\nconst logoutActionCreator = () => {\r\n  return dispatch => {\r\n    window.localStorage.removeItem('loggedBlogAppUser')\r\n    dispatch(removeUserActionCreator())\r\n  }\r\n}\r\n\r\nconst signupActionCreator = (name, username, password) => {\r\n  return async dispatch => {\r\n    try {\r\n      // register new user in the application\r\n      await userService\r\n        .create(name, username, password)\r\n\r\n      // login to the application\r\n      const user = await loginService.login({\r\n        username, password\r\n      })\r\n      window.localStorage.setItem(\r\n        'loggedBlogAppUser', JSON.stringify(user)\r\n      )\r\n      blogService.setToken(user.token)\r\n      dispatch(setUserActionCreator(user))\r\n    } catch (error) {\r\n      dispatch(notificationActionCreator(\r\n        error.response.data.error,\r\n        true,\r\n        5\r\n      ))\r\n    }\r\n  }\r\n}\r\n\r\n//default state\r\nconst defaultState = {\r\n  user: null\r\n}\r\n\r\n// reducer\r\nconst authenticationReducer = (state = defaultState, action) => {\r\n  let newState = { ...state }\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case SET_USER:\r\n      newState = {\r\n        ...state,\r\n        user: payload\r\n      }\r\n      break\r\n\r\n    case REMOVE_USER:\r\n      newState = {\r\n        ...state,\r\n        user: null,\r\n      }\r\n      break\r\n\r\n    default:\r\n      break\r\n  }\r\n\r\n  return newState\r\n}\r\n\r\nexport {\r\n  setUserActionCreator,\r\n  removeUserActionCreator,\r\n  loginActionCreator,\r\n  logoutActionCreator,\r\n  signupActionCreator\r\n}\r\n\r\nexport default authenticationReducer","import React, { useState } from 'react'\r\nimport {\r\n  Container,\r\n  Table,\r\n  TableBody,\r\n  Button,\r\n  Typography,\r\n  Paper,\r\n  Divider,\r\n} from '@material-ui/core'\r\nimport Notification from './Notification'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {\r\n  loginActionCreator\r\n} from '../reducers/authenticationReducer'\r\nimport CustomFormField from './CustomFormField'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  form: {\r\n    marginBottom: '8px',\r\n    maxWidth: '400px',\r\n    flexGrow: 1,\r\n    marginTop: '64px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '8px'\r\n  },\r\n\r\n  formHeading: {\r\n    textAlign: 'center',\r\n    padding: '24px 0px'\r\n  },\r\n\r\n  table: {\r\n    margin: '24px 0px'\r\n  },\r\n\r\n  notification: {\r\n    marginTop: '8px'\r\n  },\r\n\r\n  loginButton: {\r\n    alignSelf: 'center',\r\n    flexGrow: 1,\r\n    marginBottom: '8px'\r\n  },\r\n\r\n  signupButton: {\r\n    marginBottom: '32px',\r\n    textAlign: 'center'\r\n  }\r\n})\r\n\r\nconst LoginForm = () => {\r\n  const classes = useStyles()\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const dispatch = useDispatch()\r\n  const notification = useSelector(state => state.notification)\r\n\r\n  const handleLogin = async event => {\r\n    event.preventDefault()\r\n    dispatch(loginActionCreator(username, password))\r\n    setUsername('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Paper\r\n        component=\"form\"\r\n        className={classes.form}\r\n        onSubmit={handleLogin}\r\n      >\r\n        <Typography\r\n          variant=\"h4\"\r\n          className={classes.formHeading}\r\n        >\r\n          {'Log in to application'}\r\n        </Typography>\r\n        <Divider />\r\n        {\r\n          notification.message ? (\r\n            <div className={classes.notification}>\r\n              <Notification\r\n                message={notification.message}\r\n                isError={notification.isError}\r\n              />\r\n            </div>\r\n          ) : null\r\n        }\r\n        <Table className={classes.table}>\r\n          <TableBody>\r\n            <CustomFormField\r\n              id=\"username\"\r\n              label=\"username\"\r\n              variant=\"outlined\"\r\n              value={username}\r\n              size=\"small\"\r\n              onChange={({ target }) => setUsername(target.value)}\r\n            />\r\n            <CustomFormField\r\n              id=\"password\"\r\n              type=\"password\"\r\n              label=\"password\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={password}\r\n              onChange={({ target }) => setPassword(target.value)}\r\n            />\r\n          </TableBody>\r\n        </Table>\r\n        <Button\r\n          id=\"login-button\"\r\n          type=\"submit\"\r\n          variant=\"outlined\"\r\n          color='inherit'\r\n          className={classes.loginButton}\r\n          fullWidth\r\n        >\r\n          {'login'}\r\n        </Button>\r\n        <Button\r\n          component={Link}\r\n          to='/signup'\r\n          variant=\"outlined\"\r\n          color='inherit'\r\n          className={classes.signupButton}\r\n          fullWidth\r\n        >\r\n          {'Signup'}\r\n        </Button>\r\n      </Paper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Button,\r\n  Typography\r\n} from '@material-ui/core/'\r\nimport {\r\n  makeStyles\r\n} from '@material-ui/styles'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  logoutActionCreator\r\n} from '../reducers/authenticationReducer'\r\n\r\nconst useStyles = makeStyles({\r\n  typography: {\r\n    color: 'white',\r\n    flexGrow: 1,\r\n    textAlign: 'center'\r\n  },\r\n})\r\n\r\nconst CustomNavBar = () => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const user = useSelector(state => state.authentication.user)\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logoutActionCreator())\r\n    history.push('/')\r\n  }\r\n\r\n  const loggedInContent = () => (\r\n    <>\r\n      <Button color=\"inherit\" to=\"/\" component={Link}>Blogs</Button>\r\n      <Button color=\"inherit\" to=\"/users\" component={Link}>Users</Button>\r\n      <Typography className={classes.typography}>\r\n        {`${user.name} logged in`}\r\n      </Typography>\r\n      <Button\r\n        onClick={handleLogout}\r\n        variant='contained'\r\n      >\r\n        {'Logout'}\r\n      </Button>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          {\r\n            user ? loggedInContent() : (\r\n              <Typography className={classes.typography}>\r\n                {'BLOG APP'}\r\n              </Typography>\r\n            )\r\n          }\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomNavBar","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Container,\r\n  Table,\r\n  TableBody,\r\n  Button,\r\n  Typography,\r\n  Paper,\r\n  Divider,\r\n} from '@material-ui/core'\r\nimport Notification from './Notification'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {\r\n  signupActionCreator\r\n} from '../reducers/authenticationReducer'\r\n\r\nimport CustomFormField from './CustomFormField'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  form: {\r\n    marginBottom: '8px',\r\n    maxWidth: '400px',\r\n    flexGrow: 1,\r\n    marginTop: '64px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '8px'\r\n  },\r\n\r\n  formHeading: {\r\n    textAlign: 'center',\r\n    padding: '24px 0px'\r\n  },\r\n\r\n  table: {\r\n    margin: '24px 0px'\r\n  },\r\n\r\n  notification: {\r\n    marginTop: '8px'\r\n  },\r\n\r\n  signupButton: {\r\n    alignSelf: 'center',\r\n    flexGrow: 1,\r\n    marginBottom: '8px'\r\n  },\r\n\r\n  loginButton: {\r\n    marginBottom: '32px',\r\n    textAlign: 'center'\r\n  }\r\n})\r\n\r\nconst SignupForm = () => {\r\n  const classes = useStyles()\r\n  const [name, setName] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const authentication = useSelector(state => state.authentication)\r\n  const notification = useSelector(state => state.notification)\r\n\r\n  useEffect(() => {\r\n    if (authentication.user) {\r\n      history.push('/')\r\n    }\r\n  }, [authentication.user])\r\n  const handleSignup = async event => {\r\n    event.preventDefault()\r\n    dispatch(signupActionCreator(name, username, password))\r\n    setUsername('')\r\n    setPassword('')\r\n    setName('')\r\n  }\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Paper\r\n        component=\"form\"\r\n        className={classes.form}\r\n        onSubmit={handleSignup}\r\n      >\r\n        <Typography\r\n          variant=\"h4\"\r\n          className={classes.formHeading}\r\n        >\r\n          {'Register to application'}\r\n        </Typography>\r\n        <Divider />\r\n        {\r\n          notification.message ? (\r\n            <div className={classes.notification}>\r\n              <Notification\r\n                message={notification.message}\r\n                isError={notification.isError}\r\n              />\r\n            </div>\r\n          ) : null\r\n        }\r\n        <Table className={classes.table}>\r\n          <TableBody>\r\n            <CustomFormField\r\n              id=\"name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={name}\r\n              onChange={({ target }) => setName(target.value)}\r\n            />\r\n            <CustomFormField\r\n              id=\"username\"\r\n              label=\"username\"\r\n              variant=\"outlined\"\r\n              value={username}\r\n              size=\"small\"\r\n              onChange={({ target }) => setUsername(target.value)}\r\n            />\r\n            <CustomFormField\r\n              id=\"password\"\r\n              type=\"password\"\r\n              label=\"password\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={password}\r\n              onChange={({ target }) => setPassword(target.value)}\r\n            />\r\n          </TableBody>\r\n        </Table>\r\n        <Button\r\n          id=\"signup-button\"\r\n          type=\"submit\"\r\n          variant=\"outlined\"\r\n          color='inherit'\r\n          className={classes.signupButton}\r\n          fullWidth\r\n        >\r\n          {'Signup'}\r\n        </Button>\r\n        <Button\r\n          component={Link}\r\n          to='/'\r\n          variant=\"outlined\"\r\n          color='inherit'\r\n          className={classes.loginButton}\r\n          fullWidth\r\n        >\r\n          {'Login'}\r\n        </Button>\r\n      </Paper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SignupForm","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { Container, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nimport Blog from './components/Blog'\r\nimport Notification from './components/Notification'\r\nimport Users from './components/Users'\r\nimport User from './components/User'\r\nimport Blogs from './components/Blogs'\r\nimport LoginForm from './components/LoginForm'\r\nimport CustomNavBar from './components/CustomNavBar'\r\n\r\nimport blogService from './services/blogs'\r\n\r\nimport {\r\n  setUserActionCreator,\r\n} from './reducers/authenticationReducer'\r\nimport SignupForm from './components/SignupForm'\r\n\r\nconst useStyles = makeStyles({\r\n  heading: {\r\n    margin: '32px 0px'\r\n  }\r\n})\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n  const notification = useSelector(state => state.notification)\r\n  const user = useSelector(state => state.authentication.user)\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(\r\n      window.localStorage.getItem('loggedBlogAppUser')\r\n    )\r\n\r\n    if (user) {\r\n      blogService.setToken(user.token)\r\n      dispatch(setUserActionCreator(user))\r\n    }\r\n  }, [])\r\n\r\n  const heading = () => (\r\n    <div>\r\n      <Typography\r\n        variant='h2'\r\n        className={classes.heading}\r\n      >\r\n        {'Blog App'}\r\n      </Typography>\r\n      {\r\n        notification.message ? (\r\n          <Notification\r\n            message={notification.message}\r\n            isError={notification.isError}\r\n          />\r\n        ) : null\r\n      }\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <CustomNavBar />\r\n      <Container>\r\n        {user ? heading() : ''}\r\n      </Container>\r\n      <Switch>\r\n        <Route path=\"/users/:id\">\r\n          <User />\r\n        </Route>\r\n        <Route path=\"/users\">\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/blogs/:id\">\r\n          <Blog />\r\n        </Route>\r\n        <Route path=\"/signup\">\r\n          <SignupForm />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          {user ? null : <LoginForm />}\r\n          {user ? <Blogs /> : null}\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import {\r\n  createStore,\r\n  combineReducers,\r\n  applyMiddleware\r\n} from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport blogsReducer from './reducers/blogsReducer'\r\nimport authenticationReducer from './reducers/authenticationReducer'\r\nimport usersReducer from './reducers/usersReducer'\r\nimport selectedUserReducer from './reducers/selectedUserReducer'\r\nimport selectedBlogReducer from './reducers/selectedBlogReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  notification: notificationReducer,\r\n  blogs: blogsReducer,\r\n  authentication: authenticationReducer,\r\n  users: usersReducer,\r\n  selectedUser: selectedUserReducer,\r\n  selectedBlog: selectedBlogReducer,\r\n})\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './store'\r\nimport './App.css'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}